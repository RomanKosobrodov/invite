AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  CloudFront Distribution with two origins

Resources:
  CloudFrontOAI:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: multi-origin-distribution-access-identity

  ProtectedBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: cloudfront-distribution-protected
  ProtectedBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref ProtectedBucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action: s3:GetObject
            Effect: Allow
            Resource: !Sub "arn:aws:s3:::${ProtectedBucket}/*"
            Principal:
              CanonicalUser: !GetAtt CloudFrontOAI.S3CanonicalUserId

  PublicBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: cloudfront-distribution-public
  PublicBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref PublicBucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action: s3:GetObject
            Effect: Allow
            Resource: !Sub "arn:aws:s3:::${PublicBucket}/*"
            Principal:
              CanonicalUser: !GetAtt CloudFrontOAI.S3CanonicalUserId

  PublicRequestRewriteFunction:
    Type: AWS::Serverless::Application
    Properties:
      Location: ./cloudfront-rewrite-function.yaml
      Parameters:
        FunctionName: public-request-rewrite
        PathPrefix: /public

  ProtectedRequestRewriteFunction:
    Type: AWS::Serverless::Application
    Properties:
      Location: ./cloudfront-rewrite-function.yaml
      Parameters:
        FunctionName: protected-request-rewrite
        PathPrefix: /protected

  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Comment: multi-origin-cloudfront-distribution
        DefaultRootObject: "index.html"
        Enabled: true
        HttpVersion: http2
        DefaultCacheBehavior:
          CachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6
          TargetOriginId: public-website-bucket
          ViewerProtocolPolicy: redirect-to-https
        Origins:
          - Id: public-website-bucket
            DomainName: !GetAtt PublicBucket.RegionalDomainName
            S3OriginConfig:
              OriginAccessIdentity: !Sub "origin-access-identity/cloudfront/${CloudFrontOAI}"
          - Id: protected-website-bucket
            DomainName: !GetAtt ProtectedBucket.RegionalDomainName
            S3OriginConfig:
              OriginAccessIdentity: !Sub "origin-access-identity/cloudfront/${CloudFrontOAI}"
        CacheBehaviors:
          - PathPattern: public/*
            TargetOriginId: public-website-bucket
            CachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6
            ViewerProtocolPolicy: redirect-to-https
            FunctionAssociations:
              - EventType: viewer-request
                FunctionARN: !GetAtt PublicRequestRewriteFunction.Outputs.FunctionARN
          - PathPattern: protected/*
            TargetOriginId: protected-website-bucket
            ViewerProtocolPolicy: redirect-to-https
            CachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6
            FunctionAssociations:
              - EventType: viewer-request
                FunctionARN: !GetAtt ProtectedRequestRewriteFunction.Outputs.FunctionARN
        Logging: !Ref AWS::NoValue

Outputs:
  ProtectedBucketName:
    Value: !Ref ProtectedBucket
    Description: Name of the S3 bucket to store content intended for authorised users
  PublicBucketName:
    Value: !Ref PublicBucket
    Description: Name of the S3 bucket to store public content of the website
  DomainName:
    Value: !GetAtt CloudFrontDistribution.DomainName
    Description: URL of the resource
